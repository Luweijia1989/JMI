name: Build

on:
  push:
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ master ]
  schedule:
    - cron: '31 4 * * 4'

env:
  NINJA_STATUS: '[%f/%t %e %r]'

jobs:
  Android:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [armeabi-v7a, arm64-v8a]
    steps:
    - uses: actions/checkout@v2
    - name: Build for armeabi-v7a
      run: |
        cmake -DCMAKE_SYSTEM_NAME=Android -DCMAKE_ANDROID_ARCH_ABI=${{ matrix.arch }} -DCMAKE_ANDROID_NDK=$ANDROID_NDK_LATEST_HOME -DCMAKE_ANDROID_NDK_TOOLCHAIN_VERSION=clang -DCMAKE_ANDROID_STL_TYPE=c++_shared -DCMAKE_BUILD_TYPE=Release  -DCMAKE_VERBOSE_MAKEFILE=1 .
        cmake --build .

  MSVC:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x64, amd64_x86]
        std: [14, 17]
    steps:
    - uses: actions/checkout@v2
    - uses: seanmiddleditch/gha-setup-ninja@master
    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.arch }}
    - name: Build
      run: |
        cmake -DBUILD_TESTS=1 -GNinja -DCMAKE_CXX_STANDARD=${{ matrix.std }} -DCMAKE_BUILD_TYPE=Release -DCMAKE_VERBOSE_MAKEFILE=1 .
        cmake --build .
        ls
    - name: Test
      if: ${{ matrix.arch == 'x64' }} # 64bit java.exe is selected for 32bit target
      run: |
        ctest -V

  AppleClang:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install dev tools
      run: |
        brew install openjdk
        brew info openjdk
    - name: Build
      #env:
      #  JAVA_HOME: ${{ env.JAVA_HOME_11_X64 }}
      run: |
        export JAVA_HOME=/usr/local/opt/openjdk
        cmake -DBUILD_TESTS=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_VERBOSE_MAKEFILE=1 .
        cmake --build .
    - name: Test
      #env:
      #  JAVA_HOME: ${{ env.JAVA_HOME_11_X64 }}
      run: |
        ls -l lib* *.jar
        export JAVA_HOME=/usr/local/opt/openjdk
        ctest -V

  GCC:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cc_ver: [9, 10]
        std: [14, 17]
    steps:
    - uses: actions/checkout@v2
    - name: Install dev tools
      run: sudo apt install openjdk-11-jdk-headless
    - name: Build
      run: |
        cmake -DBUILD_TESTS=1 -DCMAKE_CXX_STANDARD=${{ matrix.std }} -DCMAKE_C_COMPILER=gcc-${{ matrix.cc_ver }} -DCMAKE_CXX_COMPILER=g++-${{ matrix.cc_ver }} -DCMAKE_BUILD_TYPE=Release -DCMAKE_VERBOSE_MAKEFILE=1 .
        cmake --build .
    - name: Test
      run: |
        ls -l lib* *.jar
        ctest -V

  Clang:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cc_ver: [10, 11, 12]
        std: [14, 17]
    steps:
    - uses: actions/checkout@v2
    - name: Install dev tools
      run: sudo apt install openjdk-11-jdk-headless
    - name: Build
      run: |
        cmake -DBUILD_TESTS=1 -DCMAKE_CXX_STANDARD=${{ matrix.std }} -DCMAKE_C_COMPILER=clang-${{ matrix.cc_ver }} -DCMAKE_CXX_COMPILER=clang++-${{ matrix.cc_ver }}  -DCMAKE_BUILD_TYPE=Release -DCMAKE_VERBOSE_MAKEFILE=1 .
        cmake --build .
        ls -l lib* *.jar
    - name: Test
      run: ctest -V
